def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystorePropertiesRelease = new Properties()
def keystorePropertiesFileRelease = rootProject.file('key.properties')
if (keystorePropertiesFileRelease.exists()) {
    keystorePropertiesRelease.load(new FileInputStream(keystorePropertiesFileRelease))
}

def keystorePropertiesDebug = new Properties()
def keystorePropertiesFileDebug = rootProject.file('key-debug.properties')
if (keystorePropertiesFileDebug.exists()) {
    keystorePropertiesDebug.load(new FileInputStream(keystorePropertiesFileDebug))
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        //5C:B7:66:31:3D:8D:E2:50:9E:7B:AC:C2:08:A9:C8:B8:3C:10:35:82
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "net.osmanbaba.osmanbaba"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    signingConfigs {
        release {
            if (System.getenv()["CI"]) { // CI=true is exported by Codemagic
                storeFile file(System.getenv()["FCI_BUILD_DIR"] + "/key.jks")
                storePassword System.getenv()["FCI_KEYSTORE_PASSWORD"]
                keyAlias System.getenv()["FCI_KEY_ALIAS"]
                keyPassword System.getenv()["FCI_KEY_PASSWORD"]
            } else {
                keyAlias keystorePropertiesRelease['keyAlias']
                keyPassword keystorePropertiesRelease['keyPassword']
                storeFile file(keystorePropertiesRelease['storeFile'])
                storePassword keystorePropertiesRelease['storePassword']
            }
        }

//        debug {
//            keyAlias keystorePropertiesDebug['keyAlias']
//            keyPassword keystorePropertiesDebug['keyPassword']
//            storeFile file(keystorePropertiesDebug['storeFile'])
//            storePassword keystorePropertiesDebug['storePassword']
//        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release

            //debuggable false
        }

        //debug {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
       //     signingConfig signingConfigs.debug
     //   }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation platform('com.google.firebase:firebase-bom:28.4.2')

//    // Declare the dependencies for the Firebase Cloud Messaging and Analytics libraries
//    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-messaging'
//    implementation 'com.google.firebase:firebase-analytics'
    implementation 'androidx.multidex:multidex:2.0.1'

}



//apply plugin: 'com.google.gms.google-services'